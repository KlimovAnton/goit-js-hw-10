{"version":3,"file":"commonHelpers5.js","sources":["../src/js/promise.js"],"sourcesContent":["// const promise = new Promise((resolve, reject) => {\n//     const canFullFill = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//         if(canFullFill) {\n//             resolve('This is okay')\n//         } \n    \n//         reject('Error!!!')\n//     }, 1000);\n// })\n\n\n\n// promise.then(\n//     result => {\n//         console.log(`✅${result}`)\n//         },\n//     error => {\n//         console.log(`❌${error}`)\n//     })\n\n\n\n// promise\n//     .then(onResolved, onRejected)\n//     .then(\n//         x => {\n//             console.log(x)\n\n//             return 10\n//         }\n//     )\n//     .then(\n//         y => console.log(y)\n//     )\n//     .catch(error => console.log(error))\n//     .finally(() => console.log('Выполняется всегда'))\n\n\n    function onResolved(result) {\n        console.log(`✅${result}`)\n    }\n    \n    function onRejected(error) {\n        console.log(`❌${error}`)\n    }\n\n\nconst makeOrder = dish => {\n    const DELAY = 1000;\n\n    return new Promise((resolve, reject) => {\n        const passed = Math.random() > 0.5;\n\n        setTimeout(() => {\n            if(passed) {\n                resolve('OKAY')\n            } else {\n                reject('Error')\n            }\n        }, DELAY);\n    })\n    \n}\n\nmakeOrder('Apple Juice').then(onResolved).catch(onRejected)"],"names":["onResolved","result","onRejected","error","makeOrder","dish","resolve","reject","passed"],"mappings":"oDAwCI,SAASA,EAAWC,EAAQ,CACxB,QAAQ,IAAI,IAAIA,CAAM,EAAE,CAC3B,CAED,SAASC,EAAWC,EAAO,CACvB,QAAQ,IAAI,IAAIA,CAAK,EAAE,CAC1B,CAGL,MAAMC,EAAYC,GAGP,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,MAAMC,EAAS,KAAK,OAAM,EAAK,GAE/B,WAAW,IAAM,CACVA,EACCF,EAAQ,MAAM,EAEdC,EAAO,OAAO,CAErB,EAAE,GAAK,CAChB,CAAK,EAILH,EAAuB,EAAE,KAAKJ,CAAU,EAAE,MAAME,CAAU"}