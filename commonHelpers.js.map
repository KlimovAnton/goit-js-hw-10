{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer-lesson.js"],"sourcesContent":["const refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  rebootBtn: document.querySelector('button[data-action-reboot'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\nclass Timer {\n  constructor({onTick}) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n\n    this.init();\n  }\n\n  init() {\n    const { hours, mins, secs } = this.getTimeComponents(0);\n    this.onTick({ hours, mins, secs })\n  }\n\n  start() { \n    if (this.isActive) {\n      return\n    }\n\n    const startTime = Date.now();\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const { hours, mins, secs } = this.getTimeComponents(deltaTime);\n      \n      this.onTick({ hours, mins, secs })\n      \n      // updateClockFace({ hours, mins, secs })\n    }, 1000);\n  }\n\n  stop() {\n    this.isActive = false \n    clearInterval(this.intervalId)\n  }\n\n  reboot() {\n    this.isActive = false \n    clearInterval(this.intervalId)\n    const { hours, mins, secs } = this.getTimeComponents(0);\n    this.onTick({ hours, mins, secs })\n  }\n\n  getTimeComponents(time) {\n    const hours = \n      this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)))\n    ;\n    const mins = \n      this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)))\n    ;\n    const secs = \n      this.pad(Math.floor((time % (1000 * 60)) / 1000))\n  ;\n  \n    return { hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\")\n  }\n  \n}\n\nconst timer = new Timer({\n  onTick: updateClockFace,\n})\n\nfunction updateClockFace( {hours, mins, secs} ) {\n  refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n}\n\nrefs.startBtn.addEventListener(`click`, timer.start.bind(timer))\n\nrefs.stopBtn.addEventListener(`click`, timer.stop.bind(timer))\n\nrefs.rebootBtn.addEventListener(`click`, timer.reboot.bind(timer))\n"],"names":["refs","Timer","onTick","hours","mins","secs","startTime","deltaTime","time","value","timer","updateClockFace"],"mappings":"wFAAA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,2BAA2B,EAC5D,QAAS,SAAS,cAAc,0BAA0B,EAC1D,UAAW,SAAS,cAAc,2BAA2B,EAC7D,UAAW,SAAS,cAAc,eAAe,CACnD,EAEA,MAAMC,CAAM,CACV,YAAY,CAAC,OAAAC,CAAM,EAAG,CACpB,KAAK,WAAa,KAClB,KAAK,SAAW,GAChB,KAAK,OAASA,EAEd,KAAK,KAAI,CACV,CAED,MAAO,CACL,KAAM,CAAE,MAAAC,EAAO,KAAAC,EAAM,KAAAC,CAAM,EAAG,KAAK,kBAAkB,CAAC,EACtD,KAAK,OAAO,CAAE,MAAAF,EAAO,KAAAC,EAAM,KAAAC,CAAI,CAAE,CAClC,CAED,OAAQ,CACN,GAAI,KAAK,SACP,OAGF,MAAMC,EAAY,KAAK,MACvB,KAAK,SAAW,GAEhB,KAAK,WAAa,YAAY,IAAM,CAElC,MAAMC,EADc,KAAK,MACOD,EAC1B,CAAE,MAAAH,EAAO,KAAAC,EAAM,KAAAC,CAAM,EAAG,KAAK,kBAAkBE,CAAS,EAE9D,KAAK,OAAO,CAAE,MAAAJ,EAAO,KAAAC,EAAM,KAAAC,CAAI,CAAE,CAGlC,EAAE,GAAI,CACR,CAED,MAAO,CACL,KAAK,SAAW,GAChB,cAAc,KAAK,UAAU,CAC9B,CAED,QAAS,CACP,KAAK,SAAW,GAChB,cAAc,KAAK,UAAU,EAC7B,KAAM,CAAE,MAAAF,EAAO,KAAAC,EAAM,KAAAC,CAAM,EAAG,KAAK,kBAAkB,CAAC,EACtD,KAAK,OAAO,CAAE,MAAAF,EAAO,KAAAC,EAAM,KAAAC,CAAI,CAAE,CAClC,CAED,kBAAkBG,EAAM,CACtB,MAAML,EACJ,KAAK,IAAI,KAAK,MAAOK,EAAQ,MAAyB,IAAe,CAAC,EAElEJ,EACJ,KAAK,IAAI,KAAK,MAAOI,GAAQ,IAAO,GAAK,KAAQ,IAAO,GAAG,CAAC,EAExDH,EACJ,KAAK,IAAI,KAAK,MAAOG,GAAQ,IAAO,IAAO,GAAI,CAAC,EAGlD,MAAO,CAAE,MAAAL,EAAO,KAAAC,EAAM,KAAAC,EACvB,CAED,IAAII,EAAO,CACT,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAEH,CAEA,MAAMC,EAAQ,IAAIT,EAAM,CACtB,OAAQU,CACV,CAAC,EAED,SAASA,EAAiB,CAAC,MAAAR,EAAO,KAAAC,EAAM,KAAAC,CAAI,EAAI,CAC9CL,EAAK,UAAU,YAAc,GAAGG,CAAK,IAAIC,CAAI,IAAIC,CAAI,EACvD,CAEAL,EAAK,SAAS,iBAAiB,QAASU,EAAM,MAAM,KAAKA,CAAK,CAAC,EAE/DV,EAAK,QAAQ,iBAAiB,QAASU,EAAM,KAAK,KAAKA,CAAK,CAAC,EAE7DV,EAAK,UAAU,iBAAiB,QAASU,EAAM,OAAO,KAAKA,CAAK,CAAC"}